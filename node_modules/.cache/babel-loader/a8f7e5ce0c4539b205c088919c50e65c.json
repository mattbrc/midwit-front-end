{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Desktop/crypto/midwit/midwit-app/src/App.js\";\nimport React, { useState } from 'react';\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport polygonLogo from './assets/polygonlogo.png';\nimport ethLogo from './assets/ethlogo.png';\nimport { ethers } from \"ethers\";\nimport { networks } from './utils/networks';\nexport default function App() {\n  const questions = [{\n    questionText: 'A TV is made to ___ to you?',\n    answerOptions: [{\n      answerText: 'talk',\n      isCorrect: false\n    }, {\n      answerText: 'befriend',\n      isCorrect: false\n    }, {\n      answerText: 'entertain',\n      isCorrect: true\n    }, {\n      answerText: 'fall in love with',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'What is the color yellow?',\n    answerOptions: [{\n      answerText: 'Yellow',\n      isCorrect: true\n    }, {\n      answerText: 'Duck',\n      isCorrect: false\n    }, {\n      answerText: 'Apple',\n      isCorrect: false\n    }, {\n      answerText: 'Blue',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'What is 2 x 2 + 2?',\n    answerOptions: [{\n      answerText: 'Elephant',\n      isCorrect: false\n    }, {\n      answerText: '6',\n      isCorrect: true\n    }, {\n      answerText: 'Amazon',\n      isCorrect: false\n    }, {\n      answerText: '4',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'Do you know where you live?',\n    answerOptions: [{\n      answerText: 'Yes',\n      isCorrect: true\n    }, {\n      answerText: 'No',\n      isCorrect: false\n    }, {\n      answerText: 'I play football',\n      isCorrect: false\n    }, {\n      answerText: 'Unicorns exist',\n      isCorrect: false\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const TWITTER_HANDLE = 'matt_brc';\n  const TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\n  const handleAnswerButtonClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Network logo\",\n    className: \"logo\",\n    src: network.includes(\"Polygon\") ? polygonLogo : ethLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }), currentAccount ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 24\n    }\n  }, \" Wallet: \", currentAccount.slice(0, 6), \"...\", currentAccount.slice(-4), \" \") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 101\n    }\n  }, \" Not connected \")), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }\n  }, \"midwit IQ Test\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"header-image\",\n    src: \"https://i.imgur.com/iKlQSzg.jpeg\",\n    alt: \"midwit meme\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 6\n    }\n  }, \"You scored \", score / questions.length * 100, \"%\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 8\n    }\n  }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, questions[currentQuestion].answerOptions.map((answerOption, index) => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAnswerButtonClick(answerOption.isCorrect),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, answerOption.answerText))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Twitter Logo\",\n    className: \"twitter-logo\",\n    src: twitterLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"footer-text\",\n    href: TWITTER_LINK,\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, `built by @${TWITTER_HANDLE}`)));\n}","map":{"version":3,"sources":["/Users/matt/Desktop/crypto/midwit/midwit-app/src/App.js"],"names":["React","useState","polygonLogo","ethLogo","ethers","networks","App","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","TWITTER_HANDLE","TWITTER_LINK","handleAnswerButtonClick","nextQuestion","length","network","includes","currentAccount","slice","map","answerOption","index","twitterLogo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport polygonLogo from './assets/polygonlogo.png';\nimport ethLogo from './assets/ethlogo.png';\nimport {ethers} from \"ethers\";\nimport { networks } from './utils/networks';\n\n\nexport default function App() {\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'A TV is made to ___ to you?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'talk', isCorrect: false },\n\t\t\t\t{ answerText: 'befriend', isCorrect: false },\n\t\t\t\t{ answerText: 'entertain', isCorrect: true },\n\t\t\t\t{ answerText: 'fall in love with', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'What is the color yellow?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Yellow', isCorrect: true },\n\t\t\t\t{ answerText: 'Duck', isCorrect: false },\n\t\t\t\t{ answerText: 'Apple', isCorrect: false },\n\t\t\t\t{ answerText: 'Blue', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'What is 2 x 2 + 2?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Elephant', isCorrect: false },\n\t\t\t\t{ answerText: '6', isCorrect: true },\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Do you know where you live?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Yes', isCorrect: true },\n\t\t\t\t{ answerText: 'No', isCorrect: false },\n\t\t\t\t{ answerText: 'I play football', isCorrect: false },\n\t\t\t\t{ answerText: 'Unicorns exist', isCorrect: false },\n\t\t\t],\n\t\t},\n\t];\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\tconst TWITTER_HANDLE = 'matt_brc';\n\tconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\n\tconst handleAnswerButtonClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"right\">\n\t\t\t\t<img alt=\"Network logo\" className=\"logo\" src={ network.includes(\"Polygon\") ? polygonLogo : ethLogo} />\n\t\t\t\t{ currentAccount ? <p> Wallet: {currentAccount.slice(0, 6)}...{currentAccount.slice(-4)} </p> : <p> Not connected </p> }\n\t  \t\t</div>\n\t\t\t<h1>midwit IQ Test</h1>\n\t\t\t<img className='header-image' src=\"https://i.imgur.com/iKlQSzg.jpeg\" alt=\"midwit meme\" />\n\t\t\t<div className='app'>\n\t\t\t\t{showScore ? (\n\t\t\t\t\t<div className='score-section'>You scored {(score / questions.length) * 100}%</div>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t\t<span>Question {currentQuestion+ 1}</span>/{questions.length}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption, index) => (\n\t\t\t\t\t\t\t\t<button onClick={() => handleAnswerButtonClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className=\"footer-container\">\n\t\t\t\t<img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n\t\t\t\t<a\n\t\t\t\t\tclassName=\"footer-text\"\n\t\t\t\t\thref={TWITTER_LINK}\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t>{`built by @${TWITTER_HANDLE}`}</a>\n        \t</div>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}